{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-rtc\\\\cloned-app\\\\project_video_chat\\\\client\\\\src\\\\components\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  children\n}) => {\n  _s();\n\n  const {\n    me,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    leaveCall,\n    callUser\n  } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      elevation: 10,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            item: true,\n            xs: 12,\n            md: 6,\n            className: classes.padding,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Account Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: me,\n              className: classes.margin,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                startIcon: /*#__PURE__*/_jsxDEV(Assignment, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 82\n                }, this),\n                children: \"Copy Your ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            item: true,\n            xs: 12,\n            md: 6,\n            className: classes.padding,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              gutterBottom: true,\n              variant: \"h6\",\n              children: \"Make a call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"ID to call\",\n              value: idToCall,\n              onChange: e => setIdToCall(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n              variant: \"contained\",\n              color: \"secondary\",\n              fullWidth: true,\n              onClick: leaveCall,\n              className: classes.margin,\n              children: \"Hang Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              onClick: () => callUser(idToCall),\n              className: classes.margin,\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"paLaQ18xgcXGtlTw0iaEt5Z4cMU=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/web-rtc/cloned-app/project_video_chat/client/src/components/Sidebar.jsx"],"names":["React","useState","useContext","CopyToClipboard","SocketContext","Sidebar","children","me","callAccepted","name","setName","callEnded","leaveCall","callUser","idToCall","setIdToCall","classes","padding","e","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport { SocketContext } from '../Context';\r\n\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div elevation={10}>\r\n        <form noValidate autoComplete=\"off\">\r\n          <div>\r\n            <div item xs={12} md={6} className={classes.padding}>\r\n              <h1 gutterBottom variant=\"h6\">Account Info</h1>\r\n              <input label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n              <CopyToClipboard text={me} className={classes.margin}>\r\n                <button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                  Copy Your ID\r\n                </button>\r\n              </CopyToClipboard>\r\n            </div>\r\n            <div item xs={12} md={6} className={classes.padding}>\r\n              <h1 gutterBottom variant=\"h6\">Make a call</h1>\r\n              <input label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n              {callAccepted && !callEnded ? (\r\n                <button variant=\"contained\" color=\"secondary\" fullWidth onClick={leaveCall} className={classes.margin}>\r\n                  Hang Up\r\n                </button>\r\n              ) : (\r\n                <button variant=\"contained\" color=\"primary\" fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\r\n                  Call\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}