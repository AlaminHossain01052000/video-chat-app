{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-rtc\\\\cloned-app\\\\project_video_chat\\\\client\\\\src\\\\components\\\\VideoPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoPlayer = () => {\n  _s();\n\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    stream,\n    call\n  } = useContext(SocketContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stream && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: myVideo,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: call.name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          ref: userVideo,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPlayer, \"+3j5f8vYYYHi/txeiOwP4jwFvZc=\");\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["C:/web-rtc/cloned-app/project_video_chat/client/src/components/VideoPlayer.jsx"],"names":["React","useContext","SocketContext","VideoPlayer","name","callAccepted","myVideo","userVideo","callEnded","stream","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,YAA9B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,MAArD;AAA6DC,IAAAA;AAA7D,MAAsET,UAAU,CAACC,aAAD,CAAtF;AAGA,sBACE;AAAA,eACGO,MAAM,iBACL;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKL,IAAI,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,GAAG,EAAEE,OAA9B;AAAuC,UAAA,QAAQ;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EASGD,YAAY,IAAI,CAACG,SAAjB,iBACC;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKE,IAAI,CAACN,IAAL,IAAa;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,GAAG,EAAEG,SAAxB;AAAmC,UAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxBD;;GAAMJ,W;;KAAAA,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { SocketContext } from '../Context';\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n\r\n\r\n  return (\r\n    <div>\r\n      {stream && (\r\n        <div>\r\n          <div>\r\n            <h1>{name || 'Name'}</h1>\r\n            <video playsInline muted ref={myVideo} autoPlay />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {callAccepted && !callEnded && (\r\n        <div>\r\n          <div>\r\n            <h1>{call.name || 'Name'}</h1>\r\n            <video playsInline ref={userVideo} autoPlay />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"]},"metadata":{},"sourceType":"module"}