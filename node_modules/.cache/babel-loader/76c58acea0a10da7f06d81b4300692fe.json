{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-rtc\\\\cloned-app-2\\\\client-side\\\\src\\\\components\\\\VideoPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoPlayer = () => {\n  _s();\n\n  const {\n    name,\n    myVideo,\n    userVideo,\n    stream,\n    call\n  } = useContext(SocketContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stream && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: myVideo,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: call.name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          ref: userVideo,\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPlayer, \"+im2+ttoXOnGzFE8HM2gtvn+pqc=\");\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["C:/web-rtc/cloned-app-2/client-side/src/components/VideoPlayer.jsx"],"names":["React","useContext","SocketContext","VideoPlayer","name","myVideo","userVideo","stream","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,YAA9B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,MAA5B;AAAoCC,IAAAA;AAApC,MAA6CP,UAAU,CAACC,aAAD,CAA7D;AACA,sBACE;AAAA,eACGK,MAAM,iBACL;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKH,IAAI,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,GAAG,EAAEC,OAA9B;AAAuC,UAAA,QAAQ;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUE;AAAA,6BACE;AAAA,gCACE;AAAA,oBAAKG,IAAI,CAACJ,IAAL,IAAa;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,GAAG,EAAEE,SAAxB;AAAmC,UAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtBD;;GAAMH,W;;KAAAA,W;AAwBN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { SocketContext } from '../Context';\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, myVideo, userVideo, stream, call } = useContext(SocketContext);\r\n  return (\r\n    <div>\r\n      {stream && (\r\n        <div>\r\n          <div>\r\n            <h1>{name || 'Name'}</h1>\r\n            <video playsInline muted ref={myVideo} autoPlay />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* {callAccepted && !callEnded && ( */}\r\n      <div>\r\n        <div>\r\n          <h1>{call.name || 'Name'}</h1>\r\n          <video playsInline ref={userVideo} autoPlay />\r\n        </div>\r\n      </div>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"]},"metadata":{},"sourceType":"module"}