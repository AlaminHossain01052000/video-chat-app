{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-rtc\\\\cloned-app\\\\project_video_chat\\\\client\\\\src\\\\components\\\\Sidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  children\n}) => {\n  _s();\n\n  const {\n    me,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    leaveCall,\n    callUser\n  } = useContext(SocketContext);\n  const [idToCall, setIdToCall] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      elevation: 10,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Account Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n              text: me,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                children: \"Copy Your ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Make a call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              label: \"ID to call\",\n              value: idToCall,\n              onChange: e => setIdToCall(e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: leaveCall,\n              children: \"Hang Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => callUser(idToCall),\n              children: \"Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"paLaQ18xgcXGtlTw0iaEt5Z4cMU=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/web-rtc/cloned-app/project_video_chat/client/src/components/Sidebar.jsx"],"names":["React","useState","useContext","CopyToClipboard","SocketContext","Sidebar","children","me","callAccepted","name","setName","callEnded","leaveCall","callUser","idToCall","setIdToCall","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AAGA,SAASC,aAAT,QAA8B,YAA9B;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChC,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,YAAN;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA,SAA9C;AAAyDC,IAAAA;AAAzD,MAAsEX,UAAU,CAACE,aAAD,CAAtF;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAGA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,EAAhB;AAAA,8BACE;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,YAAY,EAAC,KAA9B;AAAA,+BACE;AAAA,kCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,KAAK,EAAC,MAAb;AAAoB,cAAA,KAAK,EAAEQ,IAA3B;AAAiC,cAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzD;AAA2E,cAAA,SAAS;AAApF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEX,EAAvB;AAAA,qCACE;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,KAAK,EAAC,YAAb;AAA0B,cAAA,KAAK,EAAEO,QAAjC;AAA2C,cAAA,QAAQ,EAAGE,CAAD,IAAOD,WAAW,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvE;AAAyF,cAAA,SAAS;AAAlG;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGV,YAAY,IAAI,CAACG,SAAjB,gBACC;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAEC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAGC;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE,MAAMC,QAAQ,CAACC,QAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAuBGR,QAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAlCD;;GAAMD,O;;KAAAA,O;AAoCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n\r\nimport { SocketContext } from '../Context';\r\n\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n  const [idToCall, setIdToCall] = useState('');\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div elevation={10}>\r\n        <form noValidate autoComplete=\"off\">\r\n          <div>\r\n            <div>\r\n              <h1>Account Info</h1>\r\n              <input label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\r\n              <CopyToClipboard text={me}>\r\n                <button type=\"button\">Copy Your ID</button>\r\n              </CopyToClipboard>\r\n            </div>\r\n            <div>\r\n              <h1>Make a call</h1>\r\n              <input label=\"ID to call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\r\n              {callAccepted && !callEnded ? (\r\n                <button type=\"button\" onClick={leaveCall}>Hang Up</button>\r\n              ) : (\r\n                <button type=\"button\" onClick={() => callUser(idToCall)}>\r\n                  Call\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}