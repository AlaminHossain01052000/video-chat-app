{"ast":null,"code":"var _jsxFileName = \"C:\\\\web-rtc\\\\cloned-app\\\\project_video_chat\\\\client\\\\src\\\\components\\\\VideoPlayer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  video: {\n    width: '550px',\n    [theme.breakpoints.down('xs')]: {\n      width: '300px'\n    }\n  },\n  gridContainer: {\n    justifyContent: 'center',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column'\n    }\n  },\n  paper: {\n    padding: '10px',\n    border: '2px solid black',\n    margin: '10px'\n  }\n}));\n\nconst VideoPlayer = () => {\n  _s();\n\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    stream,\n    call\n  } = useContext(SocketContext);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    container: true,\n    className: classes.gridContainer,\n    children: [stream && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          className: classes.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          variant: \"h5\",\n          gutterBottom: true,\n          children: call.name || 'Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          ref: userVideo,\n          autoPlay: true,\n          className: classes.video\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPlayer, \"f/BKXkPWlRNDqegIkFEAHZFrvT8=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["C:/web-rtc/cloned-app/project_video_chat/client/src/components/VideoPlayer.jsx"],"names":["React","useContext","SocketContext","useStyles","makeStyles","theme","video","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","name","callAccepted","myVideo","userVideo","callEnded","stream","call","classes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,aAAT,QAA8B,YAA9B;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE,OADF;AAEL,KAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BF,MAAAA,KAAK,EAAE;AADuB;AAF3B,GADgC;AAOvCG,EAAAA,aAAa,EAAE;AACbC,IAAAA,cAAc,EAAE,QADH;AAEb,KAACN,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BG,MAAAA,aAAa,EAAE;AADe;AAFnB,GAPwB;AAavCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,MAAM,EAAE,iBAFH;AAGLC,IAAAA,MAAM,EAAE;AAHH;AAbgC,CAAZ,CAAD,CAA5B;;AAoBA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,MAArD;AAA6DC,IAAAA;AAA7D,MAAsEvB,UAAU,CAACC,aAAD,CAAtF;AACA,QAAMuB,OAAO,GAAGtB,SAAS,EAAzB;AAEA,sBACE;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,SAAS,EAAEsB,OAAO,CAACf,aAAlC;AAAA,eACGa,MAAM,iBACL;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACZ,KAAxB;AAAA,6BACE;AAAK,QAAA,IAAI,MAAT;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,gCACE;AAAI,UAAA,OAAO,EAAC,IAAZ;AAAiB,UAAA,YAAY,MAA7B;AAAA,oBAA+BK,IAAI,IAAI;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,GAAG,EAAEE,OAA9B;AAAuC,UAAA,QAAQ,MAA/C;AAAgD,UAAA,SAAS,EAAEK,OAAO,CAACnB;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,EASGa,YAAY,IAAI,CAACG,SAAjB,iBACC;AAAK,MAAA,SAAS,EAAEG,OAAO,CAACZ,KAAxB;AAAA,6BACE;AAAK,QAAA,IAAI,MAAT;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,gCACE;AAAI,UAAA,OAAO,EAAC,IAAZ;AAAiB,UAAA,YAAY,MAA7B;AAAA,oBAA+BW,IAAI,CAACN,IAAL,IAAa;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,GAAG,EAAEG,SAAxB;AAAmC,UAAA,QAAQ,MAA3C;AAA4C,UAAA,SAAS,EAAEI,OAAO,CAACnB;AAA/D;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAxBD;;GAAMW,W;UAEYd,S;;;KAFZc,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { useContext } from 'react';\r\n\r\nimport { SocketContext } from '../Context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  video: {\r\n    width: '550px',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '300px',\r\n    },\r\n  },\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: '10px',\r\n    border: '2px solid black',\r\n    margin: '10px',\r\n  },\r\n}));\r\n\r\nconst VideoPlayer = () => {\r\n  const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div container className={classes.gridContainer}>\r\n      {stream && (\r\n        <div className={classes.paper}>\r\n          <div item xs={12} md={6}>\r\n            <h1 variant=\"h5\" gutterBottom>{name || 'Name'}</h1>\r\n            <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {callAccepted && !callEnded && (\r\n        <div className={classes.paper}>\r\n          <div item xs={12} md={6}>\r\n            <h1 variant=\"h5\" gutterBottom>{call.name || 'Name'}</h1>\r\n            <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"]},"metadata":{},"sourceType":"module"}